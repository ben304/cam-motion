// Generated by CoffeeScript 1.3.3
var LETTER_CHECKING_DELAY, LETTER_CHECKING_TIME, Letter, LettersCtrl, Page1_Letters, Page1_Width, Page2_Letters, Page2_Width, Page3_Letters, Page3_Width;

LETTER_CHECKING_TIME = 500;

LETTER_CHECKING_DELAY = 100;

Page1_Letters = [["Enter", 335, 312, 160]];

Page2_Letters = [["Restart", 238, 295], ["Rank", 447, 295]];

Page3_Letters = [["Restart", 362, 445]];

Page1_Width = 66;

Page2_Width = 120;

Page3_Width = 80;

LettersCtrl = (function() {

  LettersCtrl.prototype.disabled = false;

  function LettersCtrl(page, circleSelector) {
    var letter, letters, _i, _len;
    this.letters = [];
    this.circleInput = $(circleSelector);
    this.circle = this.circleInput.knob({
      thickness: 0.3,
      width: 60
    });
    letters = window[page + "_Letters"];
    this.width = window[page + "_Width"];
    for (_i = 0, _len = letters.length; _i < _len; _i++) {
      letter = letters[_i];
      this.letters.push(new Letter(letter[0], letter[1], letter[2], letter[3] || this.width));
    }
    this.init();
  }

  LettersCtrl.prototype.init = function() {
    var _this = this;
    this.delayTimer = null;
    this.inputTimer = null;
    this.inLetter = "";
    return this.circle.bind('change', function(ev) {
      if (ev.target.value >= 100) {
        return _this.inputLetter(_this.preLetter);
      }
    });
  };

  LettersCtrl.prototype.bind = function(x, y) {
    var letter, rx, ry,
      _this = this;
    if (this.disabled) {
      return;
    }
    this.x = x - this.width / 2;
    this.y = y - this.width / 2;
    letter = this.checkInLetter(x, y);
    rx = letter ? letter.x + (letter.width - 60) / 2 : x;
    ry = letter ? letter.y + (letter.height - 60) / 2 : y;
    this.circle[0].style.cssText = "position: absolute; left: " + rx + "px; top: " + ry + "px;";
    if (letter === this.preLetter) {
      return;
    }
    clearTimeout(this.delayTimer);
    clearTimeout(this.inputTimer);
    this.hideProgress();
    this.preLetter = letter;
    if (!letter) {
      return;
    }
    return this.delayTimer = setTimeout(function() {
      return _this.checkAfterDelay.call(_this);
    }, LETTER_CHECKING_DELAY);
  };

  LettersCtrl.prototype.checkAfterDelay = function() {
    return this.showProgress();
  };

  LettersCtrl.prototype.inputLetter = function(letter) {
    var val;
    console.log(letter);
    if (!letter || this.disabled) {
      return;
    }
    SoundBox.play('ding');
    if (letter.letter === "BackSpace") {
      val = $('#username').val();
      return $('#username').val(val.substring(0, val.length - 1));
    } else if (letter.letter === "Enter") {
      this.disabled = true;
      return App.start();
    } else if (letter.letter === "Restart") {
      this.disabled = true;
      return game.restart(App.restart);
    } else if (letter.letter === "Rank") {
      this.disabled = true;
      return App.showScoreList();
    } else {
      val = $('#username').val();
      return $('#username').val(val + letter.letter);
    }
  };

  LettersCtrl.prototype.showProgress = function() {
    var value,
      _this = this;
    this.isStart = true;
    this.circleInput.val(6).trigger('change');
    clearInterval(this.progressTimer);
    value = 6;
    this.progressTimer = setInterval(function() {
      if (value >= 100) {
        return;
      }
      value = value + 6;
      return _this.circleInput.val(value).trigger('change');
    }, LETTER_CHECKING_TIME / 17);
  };

  LettersCtrl.prototype.hideProgress = function() {
    this.isStart = false;
    this.circleInput.val(0).trigger('change');
    return clearInterval(this.progressTimer);
  };

  LettersCtrl.prototype.checkInLetter = function(x, y) {
    var letter, _i, _len, _ref;
    _ref = this.letters;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      letter = _ref[_i];
      if (letter.checkIsSelf(x, y)) {
        return letter;
        break;
      }
    }
    return false;
  };

  return LettersCtrl;

})();

Letter = (function() {

  function Letter(letter, x, y, width) {
    this.letter = letter;
    this.x = x;
    this.y = y;
    this.width = this.height = width;
    this.r = x + this.width;
    this.b = y + this.height;
  }

  Letter.prototype.checkIsSelf = function(x, y) {
    return x >= this.x && x <= this.r && y >= this.y && y <= this.b;
  };

  return Letter;

})();
