// Generated by CoffeeScript 1.6.2
var app, colors, config, ejs, express, io, manager, players, playing, ranking, server;

express = require('express');

app = express();

ejs = require('ejs');

server = require('http').createServer(app);

io = require('socket.io').listen(server);

colors = require('colors');

config = require('./config');

server.listen(8081);

app.use(express["static"](config.root_path));

app.engine('ejs', ejs.__express);

app.set('view engine', 'ejs');

app.set('views', __dirname);

manager = "";

ranking = "";

players = {
  a: {},
  b: {}
};

playing = false;

app.get('/', function(req, res) {
  return res.sendfile(config.root_path + '/game.html');
});

app.get('/manage', function(req, res) {
  return res.render('manage');
});

app.get('/rank', function(req, res) {
  return res.render('rank');
});

io.sockets.on('connection', function(socket) {
  socket.on('manager', function() {
    return manager = socket.id;
  });
  socket.on('ranking_list', function(data) {
    console.log("rank_on".blue, socket.id);
    return ranking = socket.id;
  });
  socket.on('new_player', function(data) {
    console.log(("User " + data.player + " jion!").green);
    players[data.player] = {
      id: socket.id,
      name: "",
      isend: false,
      score: 0
    };
    if (manager) {
      return io.sockets.socket(manager).emit('player_update', players);
    }
  });
  socket.on('ready', function(data) {
    console.log("Name a:", data.namea.green, 'Name b:', data.nameb.green);
    players['a']['name'] = data.namea;
    players['b']['name'] = data.nameb;
    players['a']['isend'] = players['b']['isend'] = false;
    players['a']['sum'] = players['b']['sum'] = 0;
    return socket.broadcast.emit('ready', data);
  });
  socket.on('begin', function(data) {
    playing = true;
    return socket.broadcast.emit('start');
  });
  socket.on('score_update', function(data) {
    if (ranking) {
      return io.sockets.socket(ranking).emit('score_update', data);
    }
  });
  return socket.on('end', function(data) {
    var player, playera, playerb;

    console.log("end".green, data);
    player = players[data.player];
    playera = players['a'];
    playerb = players['b'];
    player.isend = true;
    player.score = data.sum;
    config.records.push(player);
    config.save_records();
    console.log("end2".blue, players, playing);
    if (playera.isend && playerb.isend) {
      playing = false;
      if (ranking) {
        return io.sockets.socket(ranking).emit('end', players);
      }
    }
  });
});
